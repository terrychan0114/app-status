# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from server.models.base_model_ import Model
from server import util


class StatusInfo(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, part_number: str=None, job_number: str=None, quantity: str=None, last_updated: str=None, comments: str=None, due_date: str=None):  # noqa: E501
        """StatusInfo - a model defined in Swagger

        :param part_number: The part_number of this StatusInfo.  # noqa: E501
        :type part_number: str
        :param job_number: The job_number of this StatusInfo.  # noqa: E501
        :type job_number: str
        :param quantity: The quantity of this StatusInfo.  # noqa: E501
        :type quantity: str
        :param last_updated: The last_updated of this StatusInfo.  # noqa: E501
        :type last_updated: str
        :param comments: The comments of this StatusInfo.  # noqa: E501
        :type comments: str
        :param due_date: The due_date of this StatusInfo.  # noqa: E501
        :type due_date: str
        """
        self.swagger_types = {
            'part_number': str,
            'job_number': str,
            'quantity': str,
            'last_updated': str,
            'comments': str,
            'due_date': str
        }

        self.attribute_map = {
            'part_number': 'part_number',
            'job_number': 'job_number',
            'quantity': 'quantity',
            'last_updated': 'last_updated',
            'comments': 'comments',
            'due_date': 'due_date'
        }
        self._part_number = part_number
        self._job_number = job_number
        self._quantity = quantity
        self._last_updated = last_updated
        self._comments = comments
        self._due_date = due_date

    @classmethod
    def from_dict(cls, dikt) -> 'StatusInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The statusInfo of this StatusInfo.  # noqa: E501
        :rtype: StatusInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def part_number(self) -> str:
        """Gets the part_number of this StatusInfo.


        :return: The part_number of this StatusInfo.
        :rtype: str
        """
        return self._part_number

    @part_number.setter
    def part_number(self, part_number: str):
        """Sets the part_number of this StatusInfo.


        :param part_number: The part_number of this StatusInfo.
        :type part_number: str
        """

        self._part_number = part_number

    @property
    def job_number(self) -> str:
        """Gets the job_number of this StatusInfo.


        :return: The job_number of this StatusInfo.
        :rtype: str
        """
        return self._job_number

    @job_number.setter
    def job_number(self, job_number: str):
        """Sets the job_number of this StatusInfo.


        :param job_number: The job_number of this StatusInfo.
        :type job_number: str
        """

        self._job_number = job_number

    @property
    def quantity(self) -> str:
        """Gets the quantity of this StatusInfo.


        :return: The quantity of this StatusInfo.
        :rtype: str
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity: str):
        """Sets the quantity of this StatusInfo.


        :param quantity: The quantity of this StatusInfo.
        :type quantity: str
        """

        self._quantity = quantity

    @property
    def last_updated(self) -> str:
        """Gets the last_updated of this StatusInfo.


        :return: The last_updated of this StatusInfo.
        :rtype: str
        """
        return self._last_updated

    @last_updated.setter
    def last_updated(self, last_updated: str):
        """Sets the last_updated of this StatusInfo.


        :param last_updated: The last_updated of this StatusInfo.
        :type last_updated: str
        """

        self._last_updated = last_updated

    @property
    def comments(self) -> str:
        """Gets the comments of this StatusInfo.


        :return: The comments of this StatusInfo.
        :rtype: str
        """
        return self._comments

    @comments.setter
    def comments(self, comments: str):
        """Sets the comments of this StatusInfo.


        :param comments: The comments of this StatusInfo.
        :type comments: str
        """

        self._comments = comments

    @property
    def due_date(self) -> str:
        """Gets the due_date of this StatusInfo.


        :return: The due_date of this StatusInfo.
        :rtype: str
        """
        return self._due_date

    @due_date.setter
    def due_date(self, due_date: str):
        """Sets the due_date of this StatusInfo.


        :param due_date: The due_date of this StatusInfo.
        :type due_date: str
        """

        self._due_date = due_date
